- name: Install docker
  hosts: _ansible_postgresql
  become: true
  vars_files:
    - secret.yml
  tasks:
    - name: upgrade all packages
      yum: 
        name: '*'
        state: latest
    # we may need to uninstall any existing docker files from the centos repo first. 
    - name: Remove docker if installed from CentOS repo
      yum:
        name: "{{ item }}"
        state: removed
      with_items:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine
    - name: Install yum utils
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - yum-utils
  # yum-utils is a collection of tools and programs for managing yum repositories, installing debug packages, source packages, extended information from repositories and administration.
    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
    - name: Install Docker
      package:
        name: docker-ce
        state: latest
    - name: Install pip
      package: 
        name: python3-pip
        state: present
        update_cache: true
    - name: Install docker sdk
      pip:
        name: docker        
    - name: Add user ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes
    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
    - name: create build directory
      file:
        path: /home/ec2-user/postgresql
        state: directory
        owner: root
        group: root
        mode: '0755'
    - name: copy the sql script
      copy:
        src: /home/ec2-user/ansible-Project/postgres/init.sql
        dest: /home/ec2-user/postgresql
    - name: copy the Dockerfile
      copy:
        src: /home/ec2-user/ansible-Project/postgres/Dockerfile
        dest: /home/ec2-user/postgresql
    - name: remove tyler_postgre container and tylercw/postgre if exists
      shell: "docker ps -q --filter 'name=tyler_postgre' && docker stop tyler_postgre && docker rm -fv tyler_postgre && docker image rm -f tylercw/postgre || echo 'Not Found'"
    - name: build container image
      docker_image:
        name: tylercw/postgre
        build:
          path: /home/ec2-user/postgresql
        source: build
        state: present
    - name: Launch postgresql docker container
      docker_container:
        name: tyler_postgre
        image: tylercw/postgre
        state: started
        ports: 
        - "5432:5432"
        env:
          POSTGRES_PASSWORD: "{{ password }}"
        volumes:
          - /db_data:/var/lib/postgresql/data
      register: container_info
    - name: Print the container_info
      debug:
        msg: "{{ container_info }}"